apply plugin: 'com.android.application'
apply plugin: 'testfairy'
apply plugin: 'license'

buildscript {
    repositories {
        // Only add repositories here that are used in *buildscript dependencies* NOT application dependencies. These go to the separate repositories block further down
        mavenCentral()
        maven { url 'https://www.testfairy.com/maven' }

    }

    dependencies {
        // TestFairy gradle plugin
        classpath 'com.testfairy.plugins.gradle:testfairy:1.+'

        // Show licenses from all dependencies
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    dexOptions {
        jumboMode = true
    }

    defaultConfig {
        applicationId "org.restcomm.android.olympus.he"
        // Using 18 instead of initial 16 due to introduction of UIAutomator for tests (and more specifically being able to handle system permission dialogs)
        // TODO: lets see if we can workaround this so that App can still use 16 which is good for backward compatibility, yet use 18 for tests
        // (most probably by using gradle product flavors). Notice though that this doesn't affect SDK so not critical
        minSdkVersion 18
        targetSdkVersion 25
        multiDexEnabled true

        logger.info("-- Using versionCode: " + VERSION_CODE)
        versionCode VERSION_CODE.toInteger()

        logger.info("-- Using versionName: " + VERSION_NAME)
        versionName VERSION_NAME

        // Pass the credentials to the build config so that they can be accessed by the application.
        // Notice that those are declared both in global gradle.properties (secret) and project gradle.properties
        // so that proper testing can be conducted by the team, while community can use default user/pass in their
        // Restcomm installation
        buildConfigField "String", "TEST_RESTCOMM_LOGIN", TEST_RESTCOMM_LOGIN
        buildConfigField "String", "TEST_RESTCOMM_PASSWORD", TEST_RESTCOMM_PASSWORD
//        buildConfigField "String", "TEST_RESTCOMM_ACCOUNT_SID", TEST_RESTCOMM_ACCOUNT_SID
//        buildConfigField "String", "TEST_RESTCOMM_AUTH_TOKEN", TEST_RESTCOMM_AUTH_TOKEN
        //buildConfigField "String", "TEST_MESSAGE_VERIFICATION", TEST_MESSAGE_VERIFICATION


        // ICE_USERNAME & ICE_PASSWORD are defined in project gradle.properties, but also overriden in global gradle.properties
        // which exists *only* in Telestax builds. Reason for this is that Telestax builds use different settings
        // for ICE that are meant for production systems, and which should remain secret (remember that the global gradle.properties
        // isn't part of the repo)
        if (project.hasProperty('ICE_USERNAME') && project.hasProperty('ICE_PASSWORD') && project.hasProperty('ICE_DOMAIN')) {
            // Add them as resource values which are available in preferences.xml
            resValue "string", "ICE_USERNAME", ICE_USERNAME
            resValue "string", "ICE_PASSWORD", ICE_PASSWORD
            resValue "string", "ICE_DOMAIN", ICE_DOMAIN
        }
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        config {
            keyAlias 'olympus-he'
            keyPassword 'olympus-he'
            storeFile file('sign/olympus-he.jks')
            storePassword 'olympus-he'
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, "restcomm-olympus-${variant.versionName}+${variant.versionCode}-RELEASE.apk")
                }
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        debug {
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, "restcomm-olympus-${variant.versionName}+${variant.versionCode}-DEBUG.apk")
                }
            }
            minifyEnabled false
            signingConfig signingConfigs.config
        }

        // TODO: currently getting some lint error from log4j library we 're using, that we need to fix and then remove this altogether:
        lintOptions {
            abortOnError false
        }
    }

    testfairyConfig {
        if (project.hasProperty('TESTFAIRY_APIKEY')) {
            apiKey TESTFAIRY_APIKEY
        }
        if (project.hasProperty('TESTFAIRY_AUTOUPDATE')) {
            autoUpdate TESTFAIRY_AUTOUPDATE.toBoolean()
        }

        metrics "cpu,memory,network,network-requests,phone-signal,logcat,gps,battery,mic,wifi"
        video "wifi"
        videoRate "0.5"
        videoQuality "low"
        maxDuration "24h"
        recordOnBackground true
        //iconWatermark true
        testersGroups "dev,qa,friends"
        notify true

        //autoUpdate TESTFAIRY_AUTOUPDATE.toBoolean()
        //uploadProguardMapping true
    }

}

repositories {
    jcenter()
    //mavenCentral()

    // for some weird reason this repo needs to be declared here even though dependency that actually uses it is in restcomm.android.sdk module
    // If we don't the dependency is not found :(
    maven {
        url "http://telestax.jfrog.io/telestax/community-releases"
    }

    /*
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    */
    maven {
        url 'https://www.testfairy.com/maven'
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    // Use local library code
    compile project(':restcomm.android.sdk')
    compile project(':kokoda.android.sdk')
    // If you want to use latest released restcomm-android-sdk library, please uncomment this and comment previous line
    //compile 'org.restcomm:restcomm-android-sdk:1.0.1-BETA6-83'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:support-v4:25.1.1'
    compile 'testfairy:testfairy-android-sdk:1.+@aar'

    // TODO: remove duplicated depencies when Maven repo is up
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.firebase:firebase-core:10.2.0'
    compile 'com.google.firebase:firebase-messaging:10.2.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'

    //compile 'testfairy:testfairy-android-sdk:1.4.5'
    //compile 'net.hockeyapp.android:HockeySDK:4.1.1'
    ////compile files('./libs/testfairy-android-sdk-1.4.6-unlimited-events.jar')
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'com.loopj.android:android-async-http:1.4.9'

}
apply plugin: 'com.google.gms.google-services'

//
/* Uncomment and build with gradle downloadLicenses and a report with all licenses will be generated in build/reports/license
downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'compile'
}
*/